{"version":3,"sources":["components/EmailField.js","components/PasswordField.js","actions/itemsActions.js","components/Filters/Filters.js","components/Filters/FiltersContainer.js","components/Card/Card.js","components/Card/CardAvatar.js","components/Card/CardContentItem.js","components/Card/CardContainer.js","actions/sessionActions.js","pages/LoginPage/Login.js","helpers/service.js","pages/LoginPage/LoginPage.js","pages/SignUpPage/SignUp.js","pages/SignUpPage/SignUpPage.js","pages/LogOutPage/Logout.js","pages/LogOutPage/LogOutPage.js","pages/PrivateRoute.js","reducers/productStore.js","pages/SearchPage/Search.js","pages/SearchPage/SearchPage.js","components/AppRoutes.js","components/Nav/NavBar.js","components/Nav/NavBarItem.js","components/Amount.js","components/CheckBox.js","components/DatePicker.js","components/DropDown/DropDown.js","components/DropDown/DropDownItem.jsx","components/DropDown/DropDownItems.jsx","components/DropDown/DropDownLayout.js","components/Button.js","components/NotFound.js","components/Cart.js","App.js","reducers/sessionStore.js","reducers/index.js","index.js"],"names":["EmailField","this","props","onChange","value","className","htmlFor","type","data-field-name","name","aria-describedby","placeholder","Component","PasswordField","caption","SET_ITEM","SET_FILTER","SET_INSTOCK","Filters","handleFocusChange","fieldName","focused","setState","state","focusedFromDate","focusedToDate","filter","colors","date","fromDate","onDateChange","onFocusChange","id","toDate","checked","inStockOnly","isLarge","items","React","FiltersContainer","handleChange","setFilter","mapDispatchToProps","payload","WrappedFiltersContainer","connect","productStore","sessionStore","errorMsg","Card","item","style","minWidth","imageSrc","image","price","issueDate","color","maxWidth","inStock","onClick","width","CardAvatar","src","alt","CardContentItem","CardContainer","setInStock","key","WrappedCardContainer","LOG_IN","LOG_OUT","LOG_IN_FAIL","SIGN_UP","Login","location","onSubmit","isAuthorized","email","password","from","pathname","SEARCH_PATH","Fragment","to","role","isValidEmail","test","getBool","JSON","parse","toLowerCase","trim","hashCode","str","hash","length","i","charCodeAt","String","LoginPage","event","target","handleSubmit","preventDefault","logIn","admin","params","callback","dispatch","checkAccess","WrappedLoginPage","user","SignUp","SignUpPage","signUp","confirmPassword","prev","WrappedSignUpPage","Logout","logOut","LOGIN_PATH","LogOutPage","WrappedLogoutPage","component","rest","render","initialState","cart","getFilteredItems","map","index","filtered_item","isFiltered","moment","isBefore","isAfter","priceFrom","Number","priceTo","applyFilter","selectItems","Search","SearchPage","WrappedSearchPage","SIGNUP_PATH","CART_PATH","LOGOUT_PATH","AppRoutes","exact","path","Cart","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavBarItem","Amount","bind","CheckBox","DatePicker","onOutsideRange","numberOfMonths","isOutsideRange","defaultProps","DropDown","DropDownItem","DropDownItems","DropDownLayout","Button","App","combineReducers","action","middleware","thunk","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.db20e3db.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class EmailField extends Component {\n  render() {\n    const { onChange, value } = this.props\n    return (\n      <div className='form-group'>\n        <label htmlFor='email'>Email address</label>\n        <input\n          type='email'\n          data-field-name={'email'}\n          onChange={onChange}\n          className='form-control'\n          name='email'\n          aria-describedby='emailHelp'\n          placeholder='Enter email'\n          value={value}\n        />\n      </div>\n    )\n  }\n}\n\nEmailField.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class PasswordField extends Component {\n  render() {\n    const { onChange, caption, name, value } = this.props\n    return (\n      <div className='form-group'>\n        <label htmlFor='InputPassword'>{caption}</label>\n        <input\n          type='password'\n          data-field-name={'password'}\n          onChange={onChange}\n          className='form-control'\n          name={name}\n          placeholder='Password'\n          value={value}\n        />\n      </div>\n    )\n  }\n}\n\nPasswordField.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n}\n","export const SET_ITEM = 'SET_ITEM'\nexport const SET_FILTER = 'SET_FILTER'\nexport const SET_INSTOCK = 'SET_INSTOCK'\n\nexport function setItem(item) {\n  return {\n    type: SET_ITEM,\n    payload: item,\n  }\n}\n\nexport function setInStock(item) {\n  return {\n    type: SET_INSTOCK,\n    payload: item,\n  }\n}\n\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: filter,\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DatePicker, CheckBox, Amount, DropDown } from '..'\n\nexport class Filters extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      focusedFromDate: null,\n      focusedToDate: null,\n    }\n  }\n\n  // need for DatePicker\n  handleFocusChange = fieldName => ({ focused }) => {\n    this.setState({ [fieldName]: focused })\n  }\n\n  render() {\n    const { onChange, filter, colors } = this.props\n    return (\n      <div className='container'>\n        <div className='pt-3 pb-3 mb-3'>\n          <div className='container'>\n            <div className='row mb-3'>\n              <DatePicker\n                caption={'From:'}\n                date={filter.fromDate}\n                onDateChange={onChange('fromDate')}\n                focused={this.state.focusedFromDate}\n                onFocusChange={this.handleFocusChange('focusedFromDate')}\n                id={'from-date-id'}\n              />\n              <DatePicker\n                caption={'To:'}\n                date={filter.toDate}\n                onDateChange={onChange('toDate')}\n                focused={this.state.focusedToDate}\n                onFocusChange={this.handleFocusChange('focusedToDate')}\n                id={'to-date-id'}\n              />\n              <div className='col-4'>\n                <CheckBox\n                  caption={'In Stock only'}\n                  onChange={onChange('inStockOnly')}\n                  checked={filter.inStockOnly}\n                  isLarge\n                />\n              </div>\n            </div>\n            <div className='row'>\n              <Amount caption={'Price from'} onChange={onChange('priceFrom')} />\n              <Amount caption={'Price to'} onChange={onChange('priceTo')} />\n              <DropDown\n                id='color-picker'\n                caption={'Color'}\n                items={colors}\n                onChange={onChange('color')}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nFilters.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setFilter } from '../../actions/itemsActions'\nimport { Filters } from './Filters'\n\nclass FiltersContainer extends React.Component {\n  handleChange = fieldName => value => {\n    this.props.setFilter({ [fieldName]: value })\n  }\n\n  render() {\n    return <Filters {...this.props} onChange={this.handleChange} />\n  }\n}\n\nFiltersContainer.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = ({ productStore, sessionStore }) => ({\n  colors: productStore.colors,\n  filter: productStore.filter,\n  errorMsg: sessionStore.errorMsg,\n})\n\nconst mapDispatchToProps = {\n  setFilter: items => setFilter(items),\n}\n\nconst WrappedFiltersContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FiltersContainer)\nexport { WrappedFiltersContainer as FiltersContainer }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CardAvatar, CardContentItem } from './'\nimport { Button, CheckBox } from '../'\n\nconst IMAGE_COL_MIN_WIDTH = '150px'\n\nexport class Card extends Component {\n  render() {\n    const { item, onChange } = this.props\n    return (\n      <div className='card mb-3'>\n        <div className='row no-gutters'>\n          <div className='col-md-2' style={{ minWidth: IMAGE_COL_MIN_WIDTH }}>\n            <CardAvatar imageSrc={item.image} name={item.name} />\n          </div>\n          <div className='col-md-10'>\n            <div className='card-body'>\n              <h5 className='card-title'>{item.name}</h5>\n              <div className='row'>\n                <div className='col-7'>\n                  <div className='container'>\n                    <div className='row'>\n                      <div className='col'>\n                        <div className='container'>\n                          <CardContentItem caption='Price' value={item.price} />\n                          <CardContentItem\n                            caption='Issue Date'\n                            value={item.issueDate}\n                          />\n                          <CardContentItem caption='Color' value={item.color} />\n                          <div\n                            className='row mt-2'\n                            style={{ maxWidth: '220px' }}\n                          >\n                            <CheckBox\n                              caption={'In Stock Only'}\n                              value={item.inStock}\n                              onChange={onChange}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <p className='card-text'></p>\n                </div>\n                <div className='col-5 align-self-center'>\n                  <Button caption={'Order'} onClick={null} width='220px' />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class CardAvatar extends Component {\n  render() {\n    const { imageSrc, name } = this.props\n    return <img src={imageSrc} alt={name} style={{ maxWidth: '150px' }} />\n  }\n}\n\nCardAvatar.propTypes = {\n  imageSrc: PropTypes.string,\n  name: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class CardContentItem extends Component {\n  render() {\n    const { caption, value } = this.props\n    return (\n      <div className='row mb-1'>\n        <span className='mr-3'>{caption}:</span>\n        <span>{value}</span>\n      </div>\n    )\n  }\n}\n\nCardContentItem.propTypes = {\n  caption: PropTypes.string,\n  value: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setInStock } from '../../actions/itemsActions'\nimport { Card } from './Card'\n\nclass CardContainer extends React.Component {\n  handleChange = id => value => {\n    this.props.setInStock({\n      id: id,\n      inStock: value,\n    })\n  }\n\n  render() {\n    const { item } = this.props\n    return (\n      <Card item={item} key={item.id} onChange={this.handleChange(item.id)} />\n    )\n  }\n}\n\nCardContainer.propTypes = {\n  item: PropTypes.object,\n  key: PropTypes.string,\n  setInStock: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  setInStock: item => setInStock(item),\n}\n\nconst WrappedCardContainer = connect(null, mapDispatchToProps)(CardContainer)\nexport { WrappedCardContainer as CardContainer }\n","export const LOG_IN = 'LOG_IN'\nexport const LOG_OUT = 'LOG_OUT'\nexport const LOG_IN_FAIL = 'LOG_IN_FAIL'\nexport const SIGN_UP = 'SIGN_UP'\n\nexport function logIn(params) {\n  return dispatch => {\n    if (checkAccess(params)) {\n      dispatch({\n        type: LOG_IN,\n        payload: {\n          email: params.email,\n          password: params.password,\n        },\n      })\n    } else {\n      dispatch({\n        type: LOG_IN_FAIL,\n        payload: 'Wrong Username or Password',\n      })\n    }\n  }\n}\n\nexport function logOut() {\n  return {\n    type: LOG_OUT,\n  }\n}\n\nexport function signUp(params) {\n  return dispatch =>\n    dispatch({\n      type: SIGN_UP,\n      payload: {\n        email: params.email,\n        password: params.password,\n      },\n    })\n}\n\nexport function checkAccess(params) {\n  return (\n    params.admin.password === params.password &&\n    params.admin.email === params.email\n  )\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport PropTypes from 'prop-types'\n\nimport { EmailField, PasswordField } from '../../components'\nimport { SEARCH_PATH } from '../../components/AppRoutes'\n\nclass Login extends Component {\n  render() {\n    const {\n      location,\n      onSubmit,\n      errorMsg,\n      isAuthorized,\n      onChange,\n      email,\n      password,\n    } = this.props\n    const { from } = location.state || { from: { pathname: SEARCH_PATH } }\n\n    return (\n      <React.Fragment>\n        {isAuthorized ? (\n          <Redirect to={from} />\n        ) : (\n          <div className='container'>\n            {errorMsg ? (\n              <div className='alert alert-danger' role='alert'>\n                {errorMsg}\n              </div>\n            ) : null}\n            <form onSubmit={onSubmit}>\n              <EmailField value={email} onChange={onChange('email')} />\n              <PasswordField\n                caption='Password'\n                name='password'\n                value={password}\n                onChange={onChange('password')}\n              />\n              <button type='submit' className='btn btn-primary'>\n                Submit\n              </button>\n            </form>\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nLogin.propTypes = {\n  errorMsg: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  location: PropTypes.object,\n  isAuthorized: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  email: PropTypes.string,\n  password: PropTypes.string,\n}\n\nexport default Login\n","//validate email address. If not email return empty string\nexport const isValidEmail = (email) => {\n  /* eslint-disable */\n  let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n  /* eslint-enable */\n  return reg.test(email)\n}\n\nexport const getBool = (value) => {\n  if (typeof (value) === \"string\") {\n    return JSON.parse(value.toLowerCase().trim())\n  } else {\n    return value\n  }\n}\n\nexport const hashCode = (str) => {\n  var hash = 0;\n  if (str.length === 0) {\n      return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n      var char = str.charCodeAt(i);\n      hash = ((hash<<5)-hash)+char;\n      hash = hash & hash; // Convert to 32bit integer\n  }\n  return String(hash);\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logIn } from '../../actions/sessionActions'\nimport Login from './Login'\nimport { isValidEmail, hashCode } from '../../helpers/service'\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMsg: this.props.errorMsg,\n      email: 'admin@myself.com',\n      password: 'admin',\n    }\n  }\n\n  handleChange = fieldName => event => {\n    this.setState({\n      [fieldName]: event.target.value,\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    const { email, password } = this.state\n\n    if (!isValidEmail(event.target.email.value)) {\n      this.setState({\n        errorMsg: 'email address is incorrect',\n      })\n      return null\n    }\n    // pass 'admin' cause we have no server part authorization\n    this.props.logIn({\n      email,\n      password: hashCode(password),\n      admin: this.props.admin,\n    })\n  }\n\n  render() {\n    const { email, password } = this.state\n    return (\n      <Login\n        {...this.props}\n        errorMsg={this.props.errorMsg || this.state.errorMsg}\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n        email={email}\n        password={password}\n      />\n    )\n  }\n}\n\nLoginPage.propTypes = {\n  isAuthorized: PropTypes.bool,\n  errorMsg: PropTypes.string,\n  admin: PropTypes.object,\n  logIn: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  isAuthorized: sessionStore.user.email !== '',\n  errorMsg: sessionStore.errorMsg,\n  user: sessionStore.user,\n  admin: sessionStore.admin,\n})\n\nconst mapDispatchToProps = {\n  logIn: (params, callback) => logIn(params, callback),\n}\n\nconst WrappedLoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPage)\nexport { WrappedLoginPage as LoginPage }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router'\n\nimport { SEARCH_PATH } from '../../components/AppRoutes'\nimport { EmailField, PasswordField } from '../../components'\n\nclass SignUp extends React.Component {\n  render() {\n    const { location, onSubmit, errorMsg, isAuthorized } = this.props\n    const { from } = location.state || { from: { pathname: SEARCH_PATH } }\n\n    if (isAuthorized) {\n      return <Redirect to={from} />\n    }\n\n    return (\n      <div className='container'>\n        {errorMsg ? (\n          <div className='alert alert-danger' role='alert'>\n            {errorMsg}\n          </div>\n        ) : null}\n        <form onSubmit={onSubmit}>\n          <EmailField />\n          <PasswordField caption={'Password'} name={'password'} />\n          <PasswordField\n            caption={'Confirm Password'}\n            name={'confirmPassword'}\n          />\n          <button type='submit' className='btn btn-primary'>\n            Submit\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nSignUp.propTypes = {\n  errorMsg: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  location: PropTypes.object,\n  isAuthorized: PropTypes.bool,\n}\n\nexport default SignUp\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { signUp } from '../../actions/sessionActions'\nimport SignUp from './SignUp'\nimport { isValidEmail, hashCode } from '../../helpers/service'\n\nclass SignUpPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMsg: this.props.errorMsg,\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { signUp } = this.props\n    if (!isValidEmail(event.target.email.value)) {\n      this.setState(prev => ({\n        ...prev,\n        errorMsg: 'email address incorrect',\n      }))\n      return null\n    }\n    if (event.target.password.value !== event.target.confirmPassword.value) {\n      this.setState(prev => ({\n        ...prev,\n        errorMsg: \"password didn't match\",\n      }))\n      return null\n    }\n    signUp({\n      email: event.target.email.value,\n      password: hashCode(event.target.password.value),\n    })\n  }\n\n  render() {\n    return (\n      <SignUp\n        {...this.props}\n        errorMsg={this.props.errorMsg || this.state.errorMsg}\n        onSubmit={this.handleSubmit}\n      />\n    )\n  }\n}\n\nSignUpPage.propTypes = {\n  isAuthorized: PropTypes.bool,\n  errorMsg: PropTypes.string,\n  user: PropTypes.object,\n  admin: PropTypes.object,\n  signUp: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  isAuthorized: sessionStore.user.email !== '',\n  errorMsg: sessionStore.errorMsg,\n  user: sessionStore.user,\n  admin: sessionStore.admin,\n})\n\nconst mapDispatchToProps = {\n  signUp: (params, callback) => signUp(params, callback),\n}\n\nconst WrappedSignUpPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUpPage)\nexport { WrappedSignUpPage as SignUpPage }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router'\nimport { LOGIN_PATH } from '../../components/AppRoutes'\n\nconst Logout = ({ logOut, user }) => {\n  return (\n    <React.Fragment>\n      {user.email ? (\n        <div className='container'>\n          <div>\n            <p>You are logged in as {user.email}</p>\n          </div>\n          <button\n            type='button'\n            className='btn btn-outline-primary'\n            onClick={logOut}\n          >\n            Logout\n          </button>\n        </div>\n      ) : (\n        <Redirect\n          to={{\n            pathname: LOGIN_PATH,\n          }}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nLogout.propTypes = {\n  logOut: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n}\n\nexport default Logout\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { logOut } from '../../actions/sessionActions'\nimport Logout from './Logout'\n\nclass LogOutPage extends React.Component {\n  render() {\n    const { logOut, user } = this.props\n    return <Logout logOut={logOut} user={user} />\n  }\n}\n\nLogOutPage.propTypes = {\n  user: PropTypes.object.isRequired,\n  logOut: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  user: sessionStore.user,\n})\n\nconst mapDispatchToProps = {\n  logOut: () => logOut(),\n}\n\nconst WrappedLogoutPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogOutPage)\nexport { WrappedLogoutPage as LogOutPage }\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { LOGIN_PATH, SEARCH_PATH } from '../components/AppRoutes'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        rest.isAuthorized ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: LOGIN_PATH,\n              state: { from: SEARCH_PATH },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nconst mapStateToProps = ({ sessionStore }) => {\n  return {\n    isAuthorized: sessionStore.user.email !== '',\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import moment from 'moment'\nimport { getBool } from '../helpers/service'\nimport { SET_ITEM, SET_FILTER, SET_INSTOCK } from '../actions/itemsActions'\nimport { colors, items, filter, cart } from './initialStore.json'\n\nconst initialState = {\n  colors,\n  items,\n  filter,\n  cart,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ITEM:\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.payload.id\n            ? {\n                ...action.payload,\n              }\n            : { ...item }\n        ),\n      }\n\n    case SET_INSTOCK:\n      return {\n        ...state,\n        items: state.items.map(item => ({\n          ...item,\n          inStock:\n            item.id === action.payload.id\n              ? action.payload.inStock\n              : item.inStock,\n        })),\n      }\n\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          ...action.payload,\n        },\n      }\n\n    default:\n      return state\n  }\n}\n\n// selector\n\nfunction applyFilter(item, filter) {\n  let filtered_item = item\n  filtered_item.isFiltered = false\n\n  // compare date interval\n  if (\n    moment(item.issueDate, 'DD-MM-YYYY').isBefore(filter.fromDate) ||\n    moment(item.issueDate, 'DD-MM-YYYY').isAfter(filter.toDate)\n  ) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check inStockOnly property\n  if (filter.inStockOnly && getBool(item.inStock) !== filter.inStockOnly) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check price range\n  if (\n    (filter.priceFrom && Number(item.price) < Number(filter.priceFrom)) ||\n    (filter.priceTo && Number(item.price) > Number(filter.priceTo))\n  ) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check color\n  if (filter.color && filter.color !== item.color) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n  return filtered_item\n}\n\nfunction getFilteredItems(items, filter) {\n  return items.map((item, index) => applyFilter(item, filter))\n}\n\nexport function selectItems(productStore) {\n  return getFilteredItems(productStore.items, productStore.filter)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CardContainer, FiltersContainer } from '../../components'\n\nexport class Search extends React.Component {\n  render() {\n    const { items } = this.props\n    return (\n      <React.Fragment>\n        {items && <FiltersContainer />}\n        <div className='container'>\n          {items &&\n            items.map(item =>\n              !item.isFiltered ? (\n                <CardContainer item={item} key={item.id} />\n              ) : (\n                ''\n              )\n            )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nSearch.propTypes = {\n  items: PropTypes.array.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { selectItems } from '../../reducers/productStore'\nimport { Search } from './Search'\n\nclass SearchPage extends React.Component {\n  render() {\n    const { items } = this.props\n    return <Search items={items} />\n  }\n}\n\nSearchPage.propTypes = {\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = ({ productStore, sessionStore }) => ({\n  items: selectItems(productStore),\n})\nconst WrappedSearchPage = connect(mapStateToProps)(SearchPage)\nexport { WrappedSearchPage as SearchPage }\n","import React, { Component } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {\n  LoginPage,\n  SignUpPage,\n  SearchPage,\n  PrivateRoute,\n  LogOutPage,\n} from '../pages'\n\nimport { NotFound, Cart } from './'\n\nexport const ROOT_PATH = '/shop-app/'\nexport const LOGIN_PATH = '/shop-app/login'\nexport const SIGNUP_PATH = '/shop-app/signup'\nexport const SEARCH_PATH = '/shop-app/search'\nexport const CART_PATH = '/shop-app/cart'\nexport const LOGOUT_PATH = '/shop-app/logout'\n\nexport class AppRoutes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path={ROOT_PATH}\n          render={() => <Redirect to={LOGIN_PATH} />}\n        />\n        <Route path={LOGIN_PATH} component={LoginPage} />\n        <Route path={SIGNUP_PATH} component={SignUpPage} />} />\n        <PrivateRoute path={SEARCH_PATH} component={SearchPage} />\n        <PrivateRoute path={CART_PATH} component={Cart} />\n        <Route path={LOGOUT_PATH} component={LogOutPage} />\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { NavBarItem } from './'\nimport {\n  LOGIN_PATH,\n  LOGOUT_PATH,\n  SEARCH_PATH,\n  SIGNUP_PATH,\n  CART_PATH,\n} from '../AppRoutes'\n\nexport class NavBar extends Component {\n  render() {\n    return (\n      <header>\n        <div className='container'>\n          <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <button\n              className='navbar-toggler'\n              type='button'\n              data-toggle='collapse'\n              data-target='#navbarToggler'\n              aria-controls='navbarToggler'\n              aria-expanded='false'\n              aria-label='Toggle navigation'\n            >\n              <span className='navbar-toggler-icon'></span>\n            </button>\n            <div className='collapse navbar-collapse' id='navbarToggler'>\n              <ul className='navbar-nav mr-auto mt-2 mt-lg-0'>\n                <NavBarItem to={LOGIN_PATH} caption={'Login'} />\n                <NavBarItem to={SIGNUP_PATH} caption={'Signup'} />\n                <NavBarItem to={SEARCH_PATH} caption={'Search'} />\n                <NavBarItem to={LOGOUT_PATH} caption={'Logout'} />\n                <NavBarItem to={CART_PATH} caption={'Cart'} />\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport class NavBarItem extends Component {\n  render() {\n    const { to, caption } = this.props\n    return (\n      <li className='nav-item'>\n        <Link className='nav-link' to={to}>\n          {caption}\n        </Link>\n      </li>\n    )\n  }\n}\n\nNavBarItem.propTypes = {\n  to: PropTypes.string,\n  caption: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class Amount extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value)\n  }\n\n  render() {\n    const { name, caption } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group input-group-lg'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text'>{caption} $</span>\n          </div>\n          <input\n            name={name}\n            type='text'\n            className='form-control'\n            aria-label='Amount (to the nearest dollar)'\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nAmount.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getBool } from '../helpers/service'\n\nexport class CheckBox extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.checked)\n  }\n\n  render() {\n    const { caption, value, name, isLarge } = this.props\n    return (\n      <div className={`input-group mb-3 ${isLarge ? 'input-group-lg' : ''}`}>\n        <div className='input-group-prepend'>\n          <div className='input-group-text'>\n            {name ? (\n              <input\n                type='checkbox'\n                name={name}\n                aria-label={`Checkbox for ${caption}`}\n                onChange={this.handleChange}\n                checked={getBool(value)}\n              />\n            ) : (\n              <input\n                type='checkbox'\n                aria-label={`Checkbox for ${caption}`}\n                onChange={this.handleChange}\n                checked={getBool(value)}\n              />\n            )}\n          </div>\n        </div>\n        <div className='form-control'>{caption}</div>\n      </div>\n    )\n  }\n}\n\nCheckBox.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  onChange: PropTypes.func.isRequired,\n  isLarge: PropTypes.bool,\n}\n\n// eslint-disable-next-line no-lone-blocks\n{\n  /* <div className='col-4'>\n<div className='input-group input-group-lg'>\n  <div className='input-group-prepend'>\n    <div className='input-group-text'>\n      {name ? (\n        <input\n          type='checkbox'\n          name={name}\n          aria-label={`Checkbox for ${caption}`}\n          onChange={this.handleChange}\n          checked={getBool(value)}\n        />\n      ) : (\n        <input\n          type='checkbox'\n          aria-label={`Checkbox for ${caption}`}\n          onChange={this.handleChange}\n          checked={getBool(value)}\n        />\n      )}\n    </div>\n  </div>\n  <div className='form-control text-left bd-highlight'>{caption}</div>\n</div>\n</div> */\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport 'react-dates/initialize'\nimport 'react-dates/lib/css/_datepicker.css'\nimport '../css/filters.css'\nimport { SingleDatePicker } from 'react-dates'\n\nexport class DatePicker extends Component {\n  render() {\n    const {\n      caption,\n      date,\n      onDateChange,\n      focused,\n      onFocusChange,\n      id,\n      onOutsideRange,\n    } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group input-group-lg'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text' id='from-date-label'>\n              {caption}\n            </span>\n          </div>\n          <SingleDatePicker\n            date={date}\n            numberOfMonths={1}\n            isOutsideRange={onOutsideRange}\n            onDateChange={onDateChange}\n            focused={focused}\n            onFocusChange={onFocusChange}\n            id={id}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nDatePicker.propTypes = {\n  onDateChange: PropTypes.func.isRequired,\n  onFocusChange: PropTypes.func.isRequired,\n  focused: PropTypes.bool,\n  date: PropTypes.object,\n  id: PropTypes.string.isRequired,\n  caption: PropTypes.string,\n}\n\nDatePicker.defaultProps = {\n  onOutsideRange: () => false,\n  caption: 'Date:',\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DropDownLayout } from './'\n\nexport class DropDown extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value)\n  }\n\n  render() {\n    const { id, caption, items, name } = this.props\n    return (\n      <DropDownLayout\n        id={id}\n        caption={caption}\n        items={items}\n        name={name}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nDropDown.propTypes = {\n  id: PropTypes.string,\n  caption: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class DropDownItem extends Component {\n  render() {\n    const { value } = this.props\n    return (\n      <option className='dropdown-item' value={value.toLowerCase()}>\n        {value}\n      </option>\n    )\n  }\n}\n\nDropDownItem.propTypes = {\n  value: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropDownItem } from './DropDownItem'\n\nexport class DropDownItems extends Component {\n  render() {\n    const { id, name, onChange, items } = this.props\n    return (\n      <select className='custom-select form-control' name={name} onChange={onChange} id={id}>\n        {items &&\n          items.map(value => (\n            <DropDownItem value={value} key={`dd-item-key-${value}`} />\n          ))}\n      </select>\n    )\n  }\n}\n\nDropDownItems.propTypes = {\n  items: PropTypes.array.isRequired,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropDownItems } from './DropDownItems'\n\nexport class DropDownLayout extends Component {\n  render() {\n    const { id, caption, items, onChange } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group input-group-lg'>\n          <div className='input-group-prepend'>\n            <label className='input-group-text' htmlFor={id}>\n              {caption}\n            </label>\n          </div>\n          <DropDownItems items={items} id={id} onChange={onChange} />\n        </div>\n      </div>\n    )\n  }\n}\n\nDropDownLayout.propTypes = {\n  id: PropTypes.string,\n  caption: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class Button extends Component {\n  render() {\n    const { caption, onClick, width } = this.props\n    return (\n        <button\n          type='button'\n          className='btn btn-outline-secondary'\n          onClick={onClick}\n          style={{ ...(width && {width}) }}\n        >\n          {caption}\n        </button>\n    )\n  }\n}\n\nButton.propTypes = {\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n  width: PropTypes.string,\n}\n","import React from 'react'\n\nexport const NotFound = () => {\n  return (\n    <div className='container'>\n      <h2>NotFound page</h2>\n      <p>under construction</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Cart = () => {\n  return (\n    <div className='container'>\n      <h2>Cart page</h2>\n      <p>under construction</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './App.css'\n\nimport { NavBar, AppRoutes } from './components'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <NavBar />\n          <AppRoutes />\n        </React.Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import {\n  LOG_IN,\n  LOG_OUT,\n  LOG_IN_FAIL,\n  SIGN_UP,\n} from '../actions/sessionActions'\nimport { admin, user, errorMsg } from './initialStore.json'\n\nconst initialState = {\n  user,\n  admin,\n  errorMsg,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        user: {\n          email: action.payload.email,\n          password: action.payload.password,\n        },\n        errorMsg: '',\n      }\n    case SIGN_UP:\n      return {\n        ...state,\n        user: {\n          email: action.payload.email,\n          password: action.payload.password,\n        },\n        errorMsg: '',\n      }\n    case LOG_OUT:\n      return {\n        ...state,\n        user: {\n          email: '',\n          password: '',\n        },\n        errorMsg: '',\n      }\n    case LOG_IN_FAIL:\n      return {\n        ...state,\n        errorMsg: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport sessionStore from './sessionStore'\nimport productStore from './productStore'\n\nexport default combineReducers({\n  sessionStore,\n  productStore,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst middleware = [thunk]\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}