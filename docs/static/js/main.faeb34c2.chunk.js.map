{"version":3,"sources":["components/EmailField.js","components/PasswordField.js","components/Filters/Filters.js","components/Filters/FiltersContainer.js","actions/itemsActions.js","components/Card/Card.js","components/Card/CardAvatar.js","components/Card/CardContentItem.js","components/Card/CardContainer.js","pages/LoginPage/Login.js","helpers/service.js","pages/LoginPage/LoginPage.js","actions/sessionActions.js","pages/SignUpPage/SignUp.js","pages/SignUpPage/SignUpPage.js","pages/LogOutPage/Logout.js","pages/LogOutPage/LogOutPage.js","pages/PrivateRoute.js","reducers/productStore.js","pages/SearchPage/Search.js","pages/SearchPage/SearchPage.js","components/AppRoutes.js","components/Nav/NavBar.js","components/Nav/NavBarItem.js","components/Amount.js","components/CheckBox.js","components/DatePicker.js","components/DropDown/DropDown.js","components/DropDown/DropDownLayout.js","components/Button.js","components/NotFound.js","components/Cart.js","App.js","reducers/sessionStore.js","reducers/index.js","index.js"],"names":["EmailField","onChange","this","props","className","htmlFor","type","data-field-name","name","aria-describedby","placeholder","Component","PasswordField","caption","Filters","handleFocusChange","fieldName","focused","setState","state","focusedFromDate","focusedToDate","filter","colors","date","fromDate","onDateChange","onFocusChange","id","toDate","checked","inStockOnly","items","React","FiltersContainer","handleChange","value","setFilter","mapDispatchToProps","payload","WrappedFiltersContainer","connect","productStore","sessionStore","errorMsg","Card","item","key","imageSrc","image","issueDate","price","color","inStock","onClick","CardAvatar","src","alt","style","maxWidth","CardContentItem","CardContainer","setInStock","WrappedCardContainer","Login","location","onSubmit","isAuthorized","from","pathname","SEARCH_PATH","Fragment","to","role","isValidEmail","email","test","getBool","JSON","parse","toLowerCase","trim","hashCode","str","hash","length","i","charCodeAt","String","LoginPage","handleSubmit","event","preventDefault","target","logIn","password","admin","params","callback","dispatch","checkAccess","WrappedLoginPage","user","SignUp","SignUpPage","signUp","confirmPassword","prev","WrappedSignUpPage","Logout","logOut","LOGIN_PATH","LogOutPage","WrappedLogoutPage","component","rest","render","initialState","cart","getFilteredItems","map","index","filtered_item","isFiltered","moment","isBefore","isAfter","priceFrom","Number","priceTo","applyFilter","selectItems","Search","SearchPage","WrappedSearchPage","AppRoutes","exact","path","Cart","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavBarItem","Amount","bind","CheckBox","DatePicker","onOutsideRange","numberOfMonths","isOutsideRange","defaultProps","DropDown","getListItems","DropDownLayout","Button","App","combineReducers","action","middleware","thunk","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.faeb34c2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class EmailField extends Component {\n  render() {\n    const { onChange } = this.props\n    return (\n      <div className='form-group'>\n        <label htmlFor='email'>Email address</label>\n        <input\n          type='email'\n          data-field-name={'email'}\n          onChange={onChange}\n          className='form-control'\n          name='email'\n          aria-describedby='emailHelp'\n          placeholder='Enter email'\n        />\n      </div>\n    )\n  }\n}\n\nEmailField.propTypes = {\n  onChange: PropTypes.func,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class PasswordField extends Component {\n  render() {\n    const { onChange, caption, name } = this.props\n    return (\n      <div className='form-group'>\n        <label htmlFor='InputPassword'>{caption}</label>\n        <input\n          type='password'\n          data-field-name={'password'}\n          onChange={onChange}\n          className='form-control'\n          name={name}\n          placeholder='Password'\n        />\n      </div>\n    )\n  }\n}\n\nPasswordField.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DatePicker, CheckBox, Amount, DropDown } from '..'\n\nexport class Filters extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      focusedFromDate: null,\n      focusedToDate: null,\n    }\n  }\n\n  // need for DatePicker\n  handleFocusChange = fieldName => ({ focused }) => {\n    this.setState({ [fieldName]: focused })\n  }\n\n  render() {\n    const { onChange, filter, colors } = this.props\n    return (\n      <div className='container'>\n        <div className='pt-3 pb-3 mb-3'>\n          <div className='container'>\n            <div className='row'>\n              <DatePicker\n                caption={'From:'}\n                date={filter.fromDate}\n                onDateChange={onChange('fromDate')}\n                focused={this.state.focusedFromDate}\n                onFocusChange={this.handleFocusChange('focusedFromDate')}\n                id={'from-date-id'}\n              />\n              <DatePicker\n                caption={'To:'}\n                date={filter.toDate}\n                onDateChange={onChange('toDate')}\n                focused={this.state.focusedToDate}\n                onFocusChange={this.handleFocusChange('focusedToDate')}\n                id={'to-date-id'}\n              />\n              <CheckBox\n                caption={'In Stock only'}\n                onChange={onChange('inStockOnly')}\n                checked={filter.inStockOnly}\n              />\n            </div>\n            <div className='row'>\n              <div className='col'> Price </div>\n            </div>\n            <div className='row'>\n              <Amount caption={'From'} onChange={onChange('priceFrom')} />\n              <Amount caption={'To'} onChange={onChange('priceTo')} />\n              <DropDown\n                caption={'Color'}\n                onChange={onChange('color')}\n                items={colors}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nFilters.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setFilter } from '../../actions/itemsActions'\nimport { Filters } from './Filters'\n\nclass FiltersContainer extends React.Component {\n  handleChange = fieldName => value => {\n    this.props.setFilter({ [fieldName]: value })\n  }\n\n  render() {\n    return <Filters {...this.props} onChange={this.handleChange} />\n  }\n}\n\nFiltersContainer.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = ({ productStore, sessionStore }) => ({\n  colors: productStore.colors,\n  filter: productStore.filter,\n  errorMsg: sessionStore.errorMsg,\n})\n\nconst mapDispatchToProps = {\n  setFilter: items => setFilter(items),\n}\n\nconst WrappedFiltersContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FiltersContainer)\nexport { WrappedFiltersContainer as FiltersContainer }\n","export const SET_ITEM = 'SET_ITEM'\nexport const SET_FILTER = 'SET_FILTER'\nexport const SET_INSTOCK = 'SET_INSTOCK'\n\nexport function setItem(item) {\n  return {\n    type: SET_ITEM,\n    payload: item,\n  }\n}\n\nexport function setInStock(item) {\n  return {\n    type: SET_INSTOCK,\n    payload: item,\n  }\n}\n\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: filter,\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CardAvatar, CardContentItem } from './'\nimport { Button, CheckBox } from '../'\n\nconst PROPS_COL_CLASSES = 'col-xs-6 col-sm-7 col-md-9 col-lg-9'\n\nexport class Card extends Component {\n  render() {\n    const { item, onChange } = this.props\n    return (\n      <div className='card border-secondary mb-3' key={item.id}>\n        <div className='card-body'>\n          <div className='row'>\n            <CardAvatar imageSrc={item.image} name={item.name} />\n            <div className={PROPS_COL_CLASSES}>\n              <div className='container'>\n                <div className='row pt-3'>\n                  <CardContentItem caption={'Name'} value={item.name} />\n                  <CardContentItem\n                    caption={'Issue Date'}\n                    value={item.issueDate}\n                  />\n                  <CardContentItem caption={'Price'} value={item.price} />\n                </div>\n                <div className='row pt-3'>\n                  <CardContentItem caption={'Color'} value={item.color} />\n                  <CheckBox\n                    caption={'In Stock Only'}\n                    value={item.inStock}\n                    onChange={onChange}\n                  />\n                  <Button caption={'Order'} onClick={null} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst IMAGE_COL_CLASSES = 'col-xs-6 col-sm-5 col-md-3 col-lg-3'\n\nexport class CardAvatar extends Component {\n  render() {\n    const { imageSrc, name } = this.props\n    return (\n      <div className={IMAGE_COL_CLASSES}>\n        <img src={imageSrc} alt={name} style={{ maxWidth: '150px' }}></img>\n      </div>\n    )\n  }\n}\n\nCardAvatar.propTypes = {\n  imageSrc: PropTypes.string,\n  name: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class CardContentItem extends Component {\n  render() {\n    const { caption, value } = this.props\n    return (\n      <div className='col-4 '>\n        <p className='card-text'>{caption}:</p>\n        <p className='card-text'>{value}</p>\n      </div>\n    )\n  }\n}\n\nCardContentItem.propTypes = {\n  caption: PropTypes.string,\n  value: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setInStock } from '../../actions/itemsActions'\nimport { Card } from './Card'\n\nclass CardContainer extends React.Component {\n  handleChange = id => value => {\n    this.props.setInStock({\n      id: id,\n      inStock: value,\n    })\n  }\n\n  render() {\n    const { item } = this.props\n    return (\n      <Card item={item} key={item.id} onChange={this.handleChange(item.id)} />\n    )\n  }\n}\n\nCardContainer.propTypes = {\n  item: PropTypes.object,\n  key: PropTypes.string,\n  setInStock: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  setInStock: item => setInStock(item),\n}\n\nconst WrappedCardContainer = connect(null, mapDispatchToProps)(CardContainer)\nexport { WrappedCardContainer as CardContainer }\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport PropTypes from 'prop-types'\n\nimport { EmailField, PasswordField } from '../../components'\nimport { SEARCH_PATH } from '../../components/AppRoutes'\n\nclass Login extends Component {\n  render() {\n    const { location, onSubmit, errorMsg, isAuthorized } = this.props\n    const { from } = location.state || { from: { pathname: SEARCH_PATH } }\n\n    return (\n      <React.Fragment>\n        {isAuthorized ? (\n          <Redirect to={from} />\n        ) : (\n          <div>\n            <div className='container'>\n              {errorMsg ? (\n                <div className='alert alert-danger' role='alert'>\n                  {errorMsg}\n                </div>\n              ) : null}\n              <form onSubmit={onSubmit}>\n                <EmailField />\n                <PasswordField caption={'Password'} name={'password'} />\n                <button type='submit' className='btn btn-primary'>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nLogin.propTypes = {\n  errorMsg: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  location: PropTypes.object,\n  isAuthorized: PropTypes.bool,\n}\n\nexport default Login\n","//validate email address. If not email return empty string\nexport const isValidEmail = (email) => {\n  /* eslint-disable */\n  let reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n  /* eslint-enable */\n  return reg.test(email)\n}\n\nexport const getBool = (value) => {\n  if (typeof (value) === \"string\") {\n    return JSON.parse(value.toLowerCase().trim())\n  } else {\n    return value\n  }\n}\n\nexport const hashCode = (str) => {\n  var hash = 0;\n  if (str.length === 0) {\n      return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n      var char = str.charCodeAt(i);\n      hash = ((hash<<5)-hash)+char;\n      hash = hash & hash; // Convert to 32bit integer\n  }\n  return String(hash);\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logIn } from '../../actions/sessionActions'\nimport Login from './Login'\nimport { isValidEmail, hashCode } from '../../helpers/service'\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMsg: this.props.errorMsg,\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    if (!isValidEmail(event.target.email.value)) {\n      this.setState({\n        errorMsg: 'email address is incorrect',\n      })\n      return null\n    }\n    // pass 'admin' cause we have no server part authorization\n    this.props.logIn({\n      email: event.target.email.value,\n      password: hashCode(event.target.password.value),\n      admin: this.props.admin,\n    })\n  }\n\n  render() {\n    return (\n      <Login\n        {...this.props}\n        errorMsg={this.props.errorMsg || this.state.errorMsg}\n        onSubmit={this.handleSubmit}\n      />\n    )\n  }\n}\n\nLoginPage.propTypes = {\n  isAuthorized: PropTypes.bool,\n  errorMsg: PropTypes.string,\n  admin: PropTypes.object,\n  logIn: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  isAuthorized: sessionStore.user.email !== '',\n  errorMsg: sessionStore.errorMsg,\n  user: sessionStore.user,\n  admin: sessionStore.admin,\n})\n\nconst mapDispatchToProps = {\n  logIn: (params, callback) => logIn(params, callback),\n}\n\nconst WrappedLoginPage = connect(mapStateToProps, mapDispatchToProps)(LoginPage)\nexport { WrappedLoginPage as LoginPage }\n","export const LOG_IN = 'LOG_IN'\nexport const LOG_OUT = 'LOG_OUT'\nexport const LOG_IN_FAIL = 'LOG_IN_FAIL'\nexport const SIGN_UP = 'SIGN_UP'\n\nexport function logIn(params) {\n  return dispatch => {\n    if (checkAccess(params)) {\n      dispatch({\n        type: LOG_IN,\n        payload: {\n          email: params.email,\n          password: params.password,\n        },\n      })\n    } else {\n      dispatch({\n        type: LOG_IN_FAIL,\n        payload: 'Wrong Username or Password',\n      })\n    }\n  }\n}\n\nexport function logOut() {\n  return {\n    type: LOG_OUT,\n  }\n}\n\nexport function signUp(params) {\n  return dispatch =>\n    dispatch({\n      type: SIGN_UP,\n      payload: {\n        email: params.email,\n        password: params.password,\n      },\n    })\n}\n\nexport function checkAccess(params) {\n  return (\n    params.admin.password === params.password &&\n    params.admin.email === params.email\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router'\n\nimport { SEARCH_PATH } from '../../components/AppRoutes'\nimport { EmailField, PasswordField } from '../../components'\n\nclass SignUp extends React.Component {\n  render() {\n    const { location, onSubmit, errorMsg, isAuthorized } = this.props\n    const { from } = location.state || { from: { pathname: SEARCH_PATH } }\n\n    if (isAuthorized) {\n      return <Redirect to={from} />\n    }\n\n    return (\n      <div className='container'>\n        {errorMsg ? (\n          <div className='alert alert-danger' role='alert'>\n            {errorMsg}\n          </div>\n        ) : null}\n        <form onSubmit={onSubmit}>\n          <EmailField />\n          <PasswordField caption={'Password'} name={'password'} />\n          <PasswordField\n            caption={'Confirm Password'}\n            name={'confirmPassword'}\n          />\n          <button type='submit' className='btn btn-primary'>\n            Submit\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nSignUp.propTypes = {\n  errorMsg: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  location: PropTypes.object,\n  isAuthorized: PropTypes.bool,\n}\n\nexport default SignUp\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { signUp } from '../../actions/sessionActions'\nimport SignUp from './SignUp'\nimport { isValidEmail, hashCode } from '../../helpers/service'\n\nclass SignUpPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errorMsg: this.props.errorMsg,\n    }\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { signUp } = this.props\n    if (!isValidEmail(event.target.email.value)) {\n      this.setState(prev => ({\n        ...prev,\n        errorMsg: 'email address incorrect',\n      }))\n      return null\n    }\n    if (event.target.password.value !== event.target.confirmPassword.value) {\n      this.setState(prev => ({\n        ...prev,\n        errorMsg: \"password didn't match\",\n      }))\n      return null\n    }\n    signUp({\n      email: event.target.email.value,\n      password: hashCode(event.target.password.value),\n    })\n  }\n\n  render() {\n    return (\n      <SignUp\n        {...this.props}\n        errorMsg={this.props.errorMsg || this.state.errorMsg}\n        onSubmit={this.handleSubmit}\n      />\n    )\n  }\n}\n\nSignUpPage.propTypes = {\n  isAuthorized: PropTypes.bool,\n  errorMsg: PropTypes.string,\n  user: PropTypes.object,\n  admin: PropTypes.object,\n  signUp: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  isAuthorized: sessionStore.user.email !== '',\n  errorMsg: sessionStore.errorMsg,\n  user: sessionStore.user,\n  admin: sessionStore.admin,\n})\n\nconst mapDispatchToProps = {\n  signUp: (params, callback) => signUp(params, callback),\n}\n\nconst WrappedSignUpPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUpPage)\nexport { WrappedSignUpPage as SignUpPage }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router'\nimport { LOGIN_PATH } from '../../components/AppRoutes'\n\nconst Logout = ({ logOut, user }) => {\n  return (\n    <React.Fragment>\n      {user.email ? (\n        <div className='container'>\n          <div>\n            <p>You are logged in as {user.email}</p>\n          </div>\n          <button\n            type='button'\n            className='btn btn-outline-primary'\n            onClick={logOut}\n          >\n            Logout\n          </button>\n        </div>\n      ) : (\n        <Redirect\n          to={{\n            pathname: LOGIN_PATH,\n          }}\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nLogout.propTypes = {\n  logOut: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n}\n\nexport default Logout\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { logOut } from '../../actions/sessionActions'\nimport Logout from './Logout'\n\nclass LogOutPage extends React.Component {\n  render() {\n    const { logOut, user } = this.props\n    return <Logout logOut={logOut} user={user} />\n  }\n}\n\nLogOutPage.propTypes = {\n  user: PropTypes.object.isRequired,\n  logOut: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = ({ sessionStore }) => ({\n  user: sessionStore.user,\n})\n\nconst mapDispatchToProps = {\n  logOut: () => logOut(),\n}\n\nconst WrappedLogoutPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogOutPage)\nexport { WrappedLogoutPage as LogOutPage }\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { LOGIN_PATH, SEARCH_PATH } from '../components/AppRoutes'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        rest.isAuthorized ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: LOGIN_PATH,\n              state: { from: SEARCH_PATH },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nconst mapStateToProps = ({ sessionStore }) => {\n  return {\n    isAuthorized: sessionStore.user.email !== '',\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import moment from 'moment'\nimport { getBool } from '../helpers/service'\nimport { SET_ITEM, SET_FILTER, SET_INSTOCK } from '../actions/itemsActions'\nimport { colors, items, filter, cart } from './initialStore.json'\n\nconst initialState = {\n  colors,\n  items,\n  filter,\n  cart,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ITEM:\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.payload.id\n            ? {\n                ...action.payload,\n              }\n            : { ...item }\n        ),\n      }\n\n    case SET_INSTOCK:\n      return {\n        ...state,\n        items: state.items.map(item => ({\n          ...item,\n          inStock:\n            item.id === action.payload.id\n              ? action.payload.inStock\n              : item.inStock,\n        })),\n      }\n\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          ...action.payload,\n        },\n      }\n\n    default:\n      return state\n  }\n}\n\n// selector\n\nfunction applyFilter(item, filter) {\n  let filtered_item = item\n  filtered_item.isFiltered = false\n\n  // compare date interval\n  if (\n    moment(item.issueDate, 'DD-MM-YYYY').isBefore(filter.fromDate) ||\n    moment(item.issueDate, 'DD-MM-YYYY').isAfter(filter.toDate)\n  ) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check inStockOnly property\n  if (filter.inStockOnly && getBool(item.inStock) !== filter.inStockOnly) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check price range\n  if (\n    (filter.priceFrom && Number(item.price) < Number(filter.priceFrom)) ||\n    (filter.priceTo && Number(item.price) > Number(filter.priceTo))\n  ) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n\n  // check color\n  if (filter.color && filter.color !== item.color) {\n    filtered_item.isFiltered = true\n    return filtered_item\n  }\n  return filtered_item\n}\n\nfunction getFilteredItems(items, filter) {\n  return items.map((item, index) => applyFilter(item, filter))\n}\n\nexport function selectItems(productStore) {\n  return getFilteredItems(productStore.items, productStore.filter)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { CardContainer, FiltersContainer } from '../../components'\n\nexport class Search extends React.Component {\n  render() {\n    const { items } = this.props\n    return (\n      <React.Fragment>\n        {items && <FiltersContainer />}\n        <div className='container'>\n          {items &&\n            items.map(item =>\n              !item.isFiltered ? (\n                <CardContainer item={item} key={item.id} />\n              ) : (\n                ''\n              )\n            )}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nSearch.propTypes = {\n  items: PropTypes.array.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { selectItems } from '../../reducers/productStore'\nimport { Search } from './Search'\n\nclass SearchPage extends React.Component {\n  render() {\n    const { items } = this.props\n    return <Search items={items} />\n  }\n}\n\nSearchPage.propTypes = {\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = ({ productStore, sessionStore }) => ({\n  items: selectItems(productStore),\n})\nconst WrappedSearchPage = connect(mapStateToProps)(SearchPage)\nexport { WrappedSearchPage as SearchPage }\n","import React, { Component } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport {\n  LoginPage,\n  SignUpPage,\n  SearchPage,\n  PrivateRoute,\n  LogOutPage,\n} from '../pages'\n\nimport { NotFound, Cart } from './'\n\nexport const ROOT_PATH = '/shop-app/'\nexport const LOGIN_PATH = '/shop-app/login'\nexport const SIGNUP_PATH = '/shop-app/signup'\nexport const SEARCH_PATH = '/shop-app/search'\nexport const CART_PATH = '/shop-app/cart'\nexport const LOGOUT_PATH = '/shop-app/logout'\n\nexport class AppRoutes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path={ROOT_PATH}\n          render={() => <Redirect to={LOGIN_PATH} />}\n        />\n        <Route path={LOGIN_PATH} component={LoginPage} />\n        <Route path={SIGNUP_PATH} component={SignUpPage} />} />\n        <PrivateRoute path={SEARCH_PATH} component={SearchPage} />\n        <PrivateRoute path={CART_PATH} component={Cart} />\n        <Route path={LOGOUT_PATH} component={LogOutPage} />\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { NavBarItem } from './'\nimport {\n  LOGIN_PATH,\n  LOGOUT_PATH,\n  SEARCH_PATH,\n  SIGNUP_PATH,\n  CART_PATH,\n} from '../AppRoutes'\n\nexport class NavBar extends Component {\n  render() {\n    return (\n      <header>\n        <div className='container'>\n          <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <button\n              className='navbar-toggler'\n              type='button'\n              data-toggle='collapse'\n              data-target='#navbarToggler'\n              aria-controls='navbarToggler'\n              aria-expanded='false'\n              aria-label='Toggle navigation'\n            >\n              <span className='navbar-toggler-icon'></span>\n            </button>\n            <div className='collapse navbar-collapse' id='navbarToggler'>\n              <ul className='navbar-nav mr-auto mt-2 mt-lg-0'>\n                <NavBarItem to={LOGIN_PATH} caption={'Login'} />\n                <NavBarItem to={SIGNUP_PATH} caption={'Signup'} />\n                <NavBarItem to={SEARCH_PATH} caption={'Search'} />\n                <NavBarItem to={LOGOUT_PATH} caption={'Logout'} />\n                <NavBarItem to={CART_PATH} caption={'Cart'} />\n              </ul>\n            </div>\n          </nav>\n        </div>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport class NavBarItem extends Component {\n  render() {\n    const { to, caption } = this.props\n    return (\n      <li className='nav-item'>\n        <Link className='nav-link' to={to}>\n          {caption}\n        </Link>\n      </li>\n    )\n  }\n}\n\nNavBarItem.propTypes = {\n  to: PropTypes.string,\n  caption: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class Amount extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value)\n  }\n\n  render() {\n    const { name, caption } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group mb-3'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text'>{caption} $</span>\n          </div>\n          <input\n            name={name}\n            type='text'\n            className='form-control'\n            aria-label='Amount (to the nearest dollar)'\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nAmount.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getBool } from '../helpers/service'\n\nexport class CheckBox extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.checked)\n  }\n\n  render() {\n    const { caption, value, name } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group mb-3'>\n          <div className='input-group-prepend'>\n            <div className='input-group-text'>\n              {name ? (\n                <input\n                  type='checkbox'\n                  name={name}\n                  aria-label={`Checkbox for ${caption}`}\n                  onChange={this.handleChange}\n                  checked={getBool(value)}\n                />\n              ) : (\n                <input\n                  type='checkbox'\n                  aria-label={`Checkbox for ${caption}`}\n                  onChange={this.handleChange}\n                  checked={getBool(value)}\n                />\n              )}\n            </div>\n          </div>\n          <div className='form-control form-control_left-border text-left bd-highlight'>\n            {caption}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nCheckBox.propTypes = {\n  caption: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport 'react-dates/initialize'\nimport 'react-dates/lib/css/_datepicker.css'\nimport '../css/filters.css'\nimport { SingleDatePicker } from 'react-dates'\n\nexport class DatePicker extends Component {\n  render() {\n    const {\n      caption,\n      date,\n      onDateChange,\n      focused,\n      onFocusChange,\n      id,\n      onOutsideRange,\n    } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group mb-3'>\n          <div className='input-group-prepend'>\n            <span className='input-group-text' id='from-date-label'>\n              {caption}\n            </span>\n          </div>\n          <SingleDatePicker\n            date={date}\n            numberOfMonths={1}\n            isOutsideRange={onOutsideRange}\n            onDateChange={onDateChange}\n            focused={focused}\n            onFocusChange={onFocusChange}\n            id={id}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nDatePicker.propTypes = {\n  onDateChange: PropTypes.func.isRequired,\n  onFocusChange: PropTypes.func.isRequired,\n  focused: PropTypes.bool,\n  date: PropTypes.object,\n  id: PropTypes.string.isRequired,\n  caption: PropTypes.string,\n}\n\nDatePicker.defaultProps = {\n  onOutsideRange: () => false,\n  caption: 'Date:',\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DropDownLayout } from './'\n\nexport class DropDown extends Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value)\n  }\n\n  getListItems() {\n    const { items, name } = this.props\n    return (\n      <select name={name} onChange={this.handleChange}>\n        {items &&\n          items.map(value => (\n            <option value={value.toLowerCase()} key={value}>\n              {value}\n            </option>\n          ))}\n      </select>\n    )\n  }\n\n  render() {\n    const { caption } = this.props\n    return <DropDownLayout caption={caption} items={this.getListItems()} />\n  }\n}\n\nDropDown.propTypes = {\n  items: PropTypes.array.isRequired,\n  name: PropTypes.string,\n  caption: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class DropDownLayout extends Component {\n  render() {\n    const { caption, items } = this.props\n    return (\n      <div className='col-4'>\n        <div className='input-group'>\n          <div className='form-control text-right bd-highlight form-control_right-border'>\n            {caption}\n          </div>\n          <div className='input-group-append'>{items}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nDropDownLayout.propTypes = {\n  caption: PropTypes.string,\n  items: PropTypes.node,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class Button extends Component {\n  render() {\n    const { caption, onClick } = this.props\n    return (\n      <div className='col-3 pt-3'>\n        <button\n          type='button'\n          className='btn btn-outline-secondary'\n          onClick={onClick}\n        >\n          {caption}\n        </button>\n      </div>\n    )\n  }\n}\n\nButton.propTypes = {\n  name: PropTypes.string,\n  onClick: PropTypes.func,\n}\n","import React from 'react'\n\nexport const NotFound = () => {\n  return (\n    <div className='container'>\n      <h2>NotFound page</h2>\n      <p>under construction</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Cart = () => {\n  return (\n    <div className='container'>\n      <h2>Cart page</h2>\n      <p>under construction</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './App.css'\n\nimport { NavBar, AppRoutes } from './components'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n          <NavBar />\n          <AppRoutes />\n        </React.Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","import {\n  LOG_IN,\n  LOG_OUT,\n  LOG_IN_FAIL,\n  SIGN_UP,\n} from '../actions/sessionActions'\nimport { admin, user, errorMsg } from './initialStore.json'\n\nconst initialState = {\n  user,\n  admin,\n  errorMsg,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return {\n        ...state,\n        user: {\n          email: action.payload.email,\n          password: action.payload.password,\n        },\n        errorMsg: '',\n      }\n    case SIGN_UP:\n      return {\n        ...state,\n        user: {\n          email: action.payload.email,\n          password: action.payload.password,\n        },\n        errorMsg: '',\n      }\n    case LOG_OUT:\n      return {\n        ...state,\n        user: {\n          email: '',\n          password: '',\n        },\n        errorMsg: '',\n      }\n    case LOG_IN_FAIL:\n      return {\n        ...state,\n        errorMsg: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport sessionStore from './sessionStore'\nimport productStore from './productStore'\n\nexport default combineReducers({\n  sessionStore,\n  productStore,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux'\n\nconst middleware = [thunk]\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleware))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}